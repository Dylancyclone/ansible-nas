---
- name: Start Fasten Health
  block:
    - name: Create Fasten Health Directory
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
      with_items:
        - "{{ fastenhealth_data_directory }}/db"
        - "{{ fastenhealth_data_directory }}/cache"

    - name: Fasten Health Docker Container
      community.docker.docker_container:
        name: "{{ fastenhealth_container_name }}"
        image: ghcr.io/fastenhealth/fasten-onprem:main
        pull: true
        ports:
          - "{{ fastenhealth_port }}:8080"
        restart_policy: unless-stopped
        memory: "{{ fastenhealth_memory }}"
        volumes:
          - "{{ fastenhealth_data_directory }}/db:/opt/fasten/db:rw"
          - "{{ fastenhealth_data_directory }}/cache:/opt/fasten/cache:rw"
        env:
          fastenhealth_ALLOWED_HOSTS: "{{ fastenhealth_hostname }}.{{ ansible_nas_domain }}"
        labels:
          traefik.enable: "{{ fastenhealth_available_externally | string }}"
          traefik.http.routers.fastenhealth.rule: "Host(`{{ fastenhealth_hostname }}.{{ ansible_nas_domain }}`)"
          traefik.http.routers.fastenhealth.tls.certresolver: "letsencrypt"
          traefik.http.routers.fastenhealth.tls.domains[0].main: "{{ ansible_nas_domain }}"
          traefik.http.routers.fastenhealth.tls.domains[0].sans: "*.{{ ansible_nas_domain }}"
          traefik.http.services.fastenhealth.loadbalancer.server.port: "3000"
  when: fastenhealth_enabled

- name: Stop Fasten
  block:
    - name: Stop Fasten
      community.docker.docker_container:
        name: "{{ fastenhealth_container_name }}"
        state: absent
  when: not fastenhealth_enabled
