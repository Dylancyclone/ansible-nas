---
- name: Start Tdarr
  block:
    - name: Create Tdarr Directories
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
      with_items:
        - "{{ tdarr_server_directory }}"
        - "{{ tdarr_config_directory }}"
        - "{{ tdarr_logs_directory }}"
        - "{{ tdarr_cache_directory }}"
        - "{{ tdarr_media_directory }}"
    - name: Create Tdarr network
      docker_network:
        name: "tdarr_network"

    - name: Tdarr
      community.docker.docker_container:
        name: "{{ tdarr_container_name }}"
        image: "{{ tdarr_image_name }}:{{ tdarr_image_version }}"
        pull: true
        volumes:
          - "{{ tdarr_server_directory }}:/app/server"
          - "{{ tdarr_config_directory }}:/app/configs"
          - "{{ tdarr_logs_directory }}:/app/logs"
          - "{{ tdarr_cache_directory }}:/temp"
          - "{{ tdarr_media_directory }}:/media"
        ports:
          - "{{ tdarr_port }}:8265"
        env:
          TZ: "{{ ansible_nas_timezone }}"
          PUID: "{{ tdarr_user_id }}"
          PGID: "{{ tdarr_group_id }}"
          NVIDIA_DRIVER_CAPABILITIES: "all"
          NVIDIA_VISIBLE_DEVICES: "all"
        restart_policy: unless-stopped
        memory: "{{ tdarr_memory }}"
        devices:
          - /dev/dri:/dev/dri
        device_requests:
          - driver: nvidia
            count: -1
            capabilities: [gpu]
        networks:
          - name: "tdarr_network"
        labels:
          traefik.enable: "{{ tdarr_available_externally | string }}"
          traefik.http.routers.tdarr.rule: "Host(`{{ tdarr_hostname }}.{{ ansible_nas_domain }}`)"
          traefik.http.routers.tdarr.tls.certresolver: "letsencrypt"
          traefik.http.routers.tdarr.tls.domains[0].main: "{{ ansible_nas_domain }}"
          traefik.http.routers.tdarr.tls.domains[0].sans: "*.{{ ansible_nas_domain }}"
          traefik.http.services.tdarr.loadbalancer.server.port: "8265"

    - name: Tdarr Node
      community.docker.docker_container:
        name: "{{ tdarr_node_container_name }}"
        image: "{{ tdarr_node_image_name }}:{{ tdarr_node_image_version }}"
        pull: true
        volumes:
          - "{{ tdarr_config_directory }}:/app/configs"
          - "{{ tdarr_logs_directory }}:/app/logs"
          - "{{ tdarr_cache_directory }}:/temp"
          - "{{ tdarr_media_directory }}:/media"
        env:
          TZ: "{{ ansible_nas_timezone }}"
          PUID: "{{ tdarr_user_id }}"
          PGID: "{{ tdarr_group_id }}"
          serverIP: "{{ tdarr_container_name }}"
          NVIDIA_DRIVER_CAPABILITIES: "all"
          NVIDIA_VISIBLE_DEVICES: "all"
        restart_policy: unless-stopped
        memory: "{{ tdarr_memory }}"
        devices:
          - /dev/dri:/dev/dri
        device_requests:
          - driver: nvidia
            count: -1
            capabilities: [gpu]
        networks:
          - name: "tdarr_network"
  when: tdarr_enabled

- name: Stop Tdarr
  block:
    - name: Stop Tdarr
      community.docker.docker_container:
        name: "{{ tdarr_container_name }}"
        state: absent
    - name: Stop Tdarr node
      community.docker.docker_container:
        name: "{{ tdarr_node_container_name }}"
        state: absent
  when: not tdarr_enabled
